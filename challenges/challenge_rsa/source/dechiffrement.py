from Crypto.PublicKey import RSA
from Crypto.Util.number import (long_to_bytes, bytes_to_long, GCD, inverse)
from base64 import (b64decode, b64encode)
import argparse
import sys

key1 = RSA.importKey(open("public1.pem").read())
key2 = RSA.importKey(open("public2.pem").read())

n = key1.n

e1 = key1.e
e2 = key2.e

c2 = b'\x9b\xb8 \x13OR\xa1\x0f\xf2\xf9\x9c\x84\x90\xac\xce\xa8\xca}b\xce\xeb\t#\xe4\xd1U[ZX\xd4\xdb\xb6\x89\xbc-\x8e:g\\\x8f\x95\xdc\xafae$"0\x19\x1f\x8b\x10\xebc\x1c\xe7\xb0\xcd\xff\xfb\x84>\xd7\x1b\xc9_P\x19\x90\xf1\xcaJ\x84D\x0b\xb0\x0c\xf4\x82\xeb\xd9t\x0b\x0cZ\xf0\xbb\xca^\xb3KSs\xf9\x96\'\x11\x9f{\xc7\x1d\x15\xc8\x8b6*\xda\xb4\x9c\xee\x02\x97\xd8O\x1f\x11\xed)lF\x1f\xdb\x1c\x85\x93-6\x0cX\xb5[\x98Ex\xae\xe8\xa0\xe4p\xfb\'\x0bP+rs\xd4\xbb\x18e\xc6\xba\x0cB\xfa?Z\xacZq/\x93\xc8\x9f)\xd2\x97\x8e\xa1\x17T5,t&\x9a\xbb\xc9\x81\x05;m\xc3\x0c\xe9f7\x06\xd9\x8aiHz\x1a]d>.I\x06\\a-])\xfb\xc4\x08\x87\xdc@1\\\x85\x10\x9b\xaf\xf4j\xa6\xbe\x90\x9f\xdc>\xdcv\xb16O\xac\x9a\xd7\x17\x93\xe3";8<\xaf\xa2[\xcdY\xb8\x1apq\x99+\x8a\x91\xebaQc\xae\xdb\xe1@\xd3sH\x7f\x94T\xa6\x00V\xb7\xdcr\x16\x02\x8dZ^#\xf3\xb7\x92A\xbbE\xf7?\x17M\xbc\xfd\x945\t\xa3\xa8e2d\x84\xd6Q\xcf\xf4Q/`\x1e\xd0C\x9d+\xfc8\xa2\x82\x06\xeaG\x1e\n\xd9#=\x1c1b\xd6\t\xd0\xa4-\xe2\x9a\xf7\xf2\x83\x8e\xbc\x81\x84Aa\x9b\'\x05\xb9\x84\xa2E:\xd55\x13\xa5\xffZs\xe4\x87\xf8\x10\x88/-\xd7\xf6MN\x14\xaf\xfe\x888,\xa0\x01\xad\xe0\r\xe2F8\x04\xec\xb6\xb0\x97\xb5\xd5\x85E\x98\xd3+wD\xf2\xf8{\xc2i\xc6\x1d\x19\xa1\xd2\xc2\xea\xa7<2}\'\x926\xdf\x91\xec\x9d\x11\x08\xa9x\x1e\x94 \x91#\xe4\xedK\xaf\xc64\x89n\xcb\xe6C\xd3\xad\xb7OC\xa0\xa2\xd9\xfetC(\xb3N\x14\xb8\x9f\xba\x88\xa0\xdd\xbeJ\xe6\xbe!\xcd\xce\xf5\xecT2\xb8\x89uk\x02\xe97B{\xe7\xe9\x9ez\xb3!\x9f \xa2b\x04l\x0b\x90\x18\x8fJ\x9b \x1b\xe9~\xe5A{\xef#\x1d\xad\x96\xe6'

c1 = b'}\xaa\\?H4\xb9\xecZ\x07\xf4\x9d,\r\xdd.k\xe8\x11\x02D\xaaS\x10%\xf52"\xb3\xad\x80\x9a\xbbK2\xdd\xad\xd0\xa5\xc7\xb6f&\xf3<\xe8\xcc\xcf9_\xaf\x018\xff\xac3\x9aD\xde\xf0E@\xe61z\x98\x9em\xc7\xd0\xea\xea\x91\x9b\xf5\x08\x11E\x95\x00\x8c\xaahd(\x14\x7f\xc5A\x89D"\x9c7Y\xbd\xfa\xa5\x0b\xf4\xee\xc0\xb6\xab\xd8\xe6\x1b\x00/r\xab\x1d\x98\xca$\x88\xbb\xc4\xbco&\xe8\x16\x93qyy\x80\x97\r\xd8\x1b\xf5\xcbG0\x01\x98\xd2]\xb2\xf5\xab+0\x8a\x00\x05\xbdrd6\xe6\x9eg\xc4\x04`EKp\xbd\xd9\t\xfe\x8e\xd6C%\xae\x95nsSS\xe2;T\xdb\x9a;\xd9d\xcaAb\xc5\x8e\xcd\x9d\x12u\xf2r{H\x00\xb4\x1a\x0e\x18\xfd&\r?\x01\x1f\xec\xcf\xd18N\xe3\x82$\xfa\x0b*\xefQ\'\xec\xe9\xda5<\xe3\xc7M\xae\xb1\xc5~\xf8\xad\x1cj\x88J\xf7\x19]\x9etDH+%\\\xa3\xdef\xb4=\xf7\x86\x15\x15\xee\x15[\xb3\xfc\x16#3\xadS>\xbd\xfe\xcb\xebN\xdcW\x93\xa6Q\x81\xd2\x9a\xd3r\xe3\xcf.\xbe%X~\x0b\x92\xb8L\xd5\xd9\xe0Y}l\x99\x19\xa4$\xbc\xe0h\t%G\xae@wp\'\x95\rzm5#\xbc\xff\xfe\xfe\x02f\xf9\xd1\xca\xb1w\xa7\x8b{\xba\xe2\xbao\x95F\x84\xfbu\xa5\xbb\x00\xd5\xfd+\xd4v\xa0 \x99\x04\xe1&\\&\xcc\xcb\xb7\\k\xf3\xd5B*\x8d\xfc\x99\x8f\xa6\x8958W\xfc"{0!\xa1\xa3]\x90\xa7\xb3#\t\x06\x80L;\x96\xe8\x98\xfa\xbe#K4ag\x00:]\x0e#8\xb55\xc3\xc3\xe8Ud!\x9f-\xc1<\x882?z\xa5H8~\r\xffs\x18\x83\x0es\x90#\xc64 \ri\x14\x0f\xcb\x1dT\xbaS\xd2\xdbv\x83\xfb\x92\x1ew9H\x15\xf7\x18>du7m\xca%\x9eLf\x80\xe3\x87#"C\xffytp\x07\xc9\xdf4sfh\x12\xb8h\xb4\xad%\xd5M\xd4\xdb\xa5\xf87\xfb<%\xbf5\xd3'

c1 = bytes_to_long(c1)
c2 = bytes_to_long(c2)

def egcd(a, b):
    if (a == 0):
        return (b, 0, 1)
    else:
        g, y, x = egcd(b % a, a)
        return (g, x - (b // a) * y, y)


g, a, b = egcd(e1, e2)

int_c1 = pow(c1, a, n)
int_c2 = pow(c2, b, n)
m = int_c2 * int_c1 % n

print(long_to_bytes(m))
