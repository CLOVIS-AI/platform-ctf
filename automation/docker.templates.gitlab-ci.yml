.docker:
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:20.10
  services:
    - name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:dind
      alias: docker
  before_script:
    - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY
    - docker login -u $CI_DEPENDENCY_PROXY_USER -p $CI_DEPENDENCY_PROXY_PASSWORD $CI_DEPENDENCY_PROXY_SERVER
  tags:
    - docker
  only:
    - merge_requests
    - main
    - tags

.docker-build:
  extends: [ .docker ]
  script:
    - docker pull "$image:latest" || true
    - docker pull "$image:staging" || true
    - >
      docker build
      --pull
      --build-arg GITLAB_PROXY=${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}
      --cache-from "$image:latest"
      --cache-from "$image:staging"
      --tag "$image:$build_version"
      -f "$dockerfile"
      "$docker_context"
    - docker push "$image:$build_version"
  only:
    - merge_requests
    - main
    - tags

.docker-empty:
  extends: [ .docker ]
  variables:
    GIT_STRATEGY: none

.docker-rename:
  extends: [ .docker-empty ]
  stage: publish
  script:
    - docker pull "$image:$build_version"
    - docker tag "$image:$build_version" "$image:$new_version"
    - docker push "$image:$new_version"

.docker-rename-staging:
  extends: [ .docker-rename ]
  variables:
    new_version: "staging"
  only:
    - main

.docker-rename-production:
  extends: [ .docker-rename ]
  variables:
    new_version: "latest"
  only:
    - tags
