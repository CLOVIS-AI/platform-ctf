
.start:
  stage: deploy
  needs: [ web/docker ]
  variables:
    TF_VAR_build_version: $build_version

.load-environment: &load-environment
  # Load the secret variables into a Terraform set(string), so it can be injected in Docker's 'env' key
  - export TF_VAR_secrets="[$(<~/secret.properties sed 's/#.*//g;s/"//g' | tr -s '\n' ", " | sed 's/,/","/g;s/^",//;s/,"$//'),"'"'"build_version=$build_version"'"'", "'"'"TF_VAR_build_version=$build_version"'"'"]"
  # Load the secret variables in Bash for the job to use
  - set -o allexport; . ~/secret.properties; set +o allexport

start:test:
  extends: [ .start ]
  script:
    - *load-environment
    - cd automation/test
    - terraform init
    - terraform apply -auto-approve -input=false | tee terraform-output.txt
    # Find 'port' in the output, remove the ANSI color escape (https://stackoverflow.com/a/18000433/5666171)
    - port=$(<terraform-output.txt grep 'port =' | sed 's/port = //' | sed -r 's/\x1B\[([0-9]{1,3}(;[0-9]{1,2})?)?[mGK]//')
    - echo "I have detected port $port"
    - echo "WEB_URL=$testing_url:$port/" >>../../.env
  only:
    - merge_requests
  tags:
    - test-server
  artifacts:
    reports:
      dotenv:
        - .env
  environment:
    name: review/$CI_PIPELINE_IID
    url: $WEB_URL
    on_stop: "stop:test"

stop:test:
  extends: [ .start ]
  script:
    - *load-environment
    - cd automation/test
    - terraform init
    - terraform destroy -auto-approve -input=false
  tags:
    - test-server
  only:
    - merge_requests
  environment:
    name: review/$CI_PIPELINE_IID
    action: stop

.restart:
  extends: [ .start ]
  script:
    - *load-environment
    - cd automation/main
    - terraform init
    - terraform apply -auto-approve -input=false

restart:staging:
  extends: [ .restart ]
  variables:
    TF_VAR_platform_port: 81
  only:
    - main
  tags:
    - staging-server
  environment:
    name: staging
    url: "$staging_url:$TF_VAR_platform_port/"

restart:production:
  extends: [ .restart ]
  variables:
    TF_VAR_platform_port: 80
  only:
    - tags
  tags:
    - production-server
  environment:
    name: production
    url: "$production_url:$TF_VAR_platform_port/"
