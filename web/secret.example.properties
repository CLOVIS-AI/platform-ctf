#
# CTF Platform by RSR, educational platform to try cyber-security challenges
# Copyright (C) 2022 ENSEIRB-MATMECA, Bordeaux-INP, RSR formation since 2018
# Supervised by Toufik Ahmed, tad@labri.fr
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#

#############################################################
# Environnement variables used inside the docker container. #
#############################################################

# IntelliJ cannot find property usages in Python code, so we suppress the unused warning:
# suppress inspection "UnusedProperty" for whole file

#region SSH

# The different SSH keys used by the server to communicate with the other machines.
# They should be encoded in base64.
# If not provided, the server will start but will not be able to communicate with the matching machines.

# The server's private key, which it will use when connecting to other machines
ssh_private_key=

# VPN's SSH fingerprint (from known_hosts), in base64
ssh_vpn_fingerprint=
# The VPN's coordinates
ssh_vpn_hostname=
ssh_vpn_port=22
ssh_vpn_user=

# Dockerhost SSH fingerprint (from known_hosts), in base64
ssh_docker_fingerprint=
# The Docker host's coordinates
ssh_docker_hostname=
ssh_docker_port=
ssh_docker_user=
# Docker host's coordinates (same as above and used by Terraform)
TF_VAR_dockerhost=
TF_VAR_dockerport=
TF_VAR_dockeruser=

#endregion
#region Database

# The file to store the SQLite database.
# This file should be stored in the docker volume, so it is reused throughout multiple executions.
database_file=/app/data/database.db
database_url=sqlite:////app/data/database.db

#endregion
#region Server

# The number of worker processes used by gunicorn.
# The ideal number is CORE * 2 + 1, where CORE is the number of CPU cores.
server_workers=9

# The log level and log location of the gunicorn server.
server_log_level=debug
server_log_file=/app/logs/ctf.log

# Stop Python execution if files take more than this length of time (in seconds).
server_timeout=1200

# Flask secret key
# This key is used to generate authentication tokens.
# DO NOT KEEP THIS BAD VALUE IN PRODUCTION.
server_secret_key=a-very-dumb-secret-key

#endregion
#region User authentication

# Are new users allowed to create accounts?
server_allows_registration=yes

# Are users allowed to connect with their username and password, without the CAS?
# If set to 'False', enable CAS integration (or no-one can log in)
server_allows_direct_login=yes

# Should the server integrate with the CAS?
server_cas_integration=yes

#endregion
#region Instances

# Storage directories
server_challenges=/app/challenges
server_help=/app/help
# Base folder where dynamic instance data is stored.
server_instances=/app/data/instances
# Base folder where database migrations are permanently stored.
server_migrations=/app/data/migrations

# How long can the instances run until they are automatically stopped (seconds)
server_instance_expiration=3600

# The range of IDs this server is allowed to use.
# You can use this range to run multiple CTF platforms without collisions.
server_instance_min_id=500
server_instance_max_id=600

#endregion
#region vCenter, Terraform, Packer, Ansible
# These variables are used by multiple tools to handle virtual machines.
# Terraform requires the TF_VAR_ prefix.

TF_VAR_vcenter_host=
TF_VAR_vcenter_user=
TF_VAR_vcenter_password=
# Name of the datastore to use in order to store and retrieve the VMs (see Datastore category in VCenter Web interface)
TF_VAR_vcenter_datastore=

# Network adapters
TF_VAR_network0=NETWORK_RSR
TF_VAR_network0_card=vmxnet3
TF_VAR_network1=
TF_VAR_network1_card=
TF_VAR_network2=
TF_VAR_network2_card=

# Generic VM credentials
TF_VAR_generic_user=rsr
TF_VAR_generic_root_user=root
TF_VAR_generic_password=rsrSecurePassw0rd

#endregion
#region Administration

# Credentials of the administrator
admin_user=
admin_password=
admin_email=

#endregion
#region Deployment

# Credentials used by Terraform to connect to the server that hosts the web interface (must be a Docker host).
# These credentials are read by the CI pipeline to update the platform.
# We assume that the GitLab runner is properly configured to access this machine.
TF_VAR_deployment_user=
TF_VAR_deployment_host=
TF_VAR_deployment_port=

#endregion
